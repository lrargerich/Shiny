?geom_bar
p<-g+facet_grid(.~type)+geom_bar(stat='sum')
print(p)
p<-g+facet_grid(.~type)+geom_point()
print(p)
View(codes)
View(pm)
qplot(data1$year,data1$Emissions,data=plotdata,facets=.~data1$type,geom="point")
qplot(data1$year,data1$Emissions,data=data1,facets=.~data1$type,geom="point")
qplot(year,Emissions,data=data1,facets=.~type,geom="point")
?qplot
qplot(year,Emissions,data=data1,facets=.~type,geom="point",weight=Emissions)
qplot(year,Emissions,data=data1,facets=.~type,geom="point",weight=value)
qplot(year,Emissions,data=data1,facets=.~type,geom="point",weight=Emissions)
qplot(data1$year,data1$Emissions,data=data1,facets=.~data1$type,geom="point")
qplot(year,Emissions,data=data1,facets=.~type,geom="point",weight=Emissions)
qplot(year,Emissions,data=data1,facets=.~type,geom="point",weight=value)
qplot(year,Emissions,data=data1,facets=.~type,geom="point",weight=Emissions)
str(plotdata)
names(plotdata)
names(plotdata)<-c("year","type","emissions")
str(plotdata)
plotdata$type<-as.factor(plotdata$type)
str(plotdata)
qplot(year,Emissions,data=plotdata,facets=.~type,geom="point")
qplot(year,emissions,data=plotdata,facets=.~type,geom="point")
qplot(year,emissions,data=plotdata,facets=.~type,geom="line")
source('E:/JH/Exploratory Data Analysis/Project2/plot3.R')
source('E:/JH/Exploratory Data Analysis/Project2/plot3.R')
source('E:/JH/Exploratory Data Analysis/Project2/plot3.R')
p<-qplot(year,emissions,data=plotdata,facets=.~type,geom="line")
print(p)
ggsave("plot3.png",p)
source('E:/JH/Exploratory Data Analysis/Project2/plot3.R')
source('E:/JH/Exploratory Data Analysis/Project2/plot2.R')
total<-merge(pm,codex,by=c("SCC","SCC"))
total<-merge(pm,codes,by=c("SCC","SCC"))
View(plotdata)
View(total)
?grep
grep("coal",total$EI.Sector)
grepl("coal",total$EI.Sector)
grepl("*coal*",total$EI.Sector)
sum(grepl("*coal*",total$EI.Sector))
grepl("*coal*",total$EI.Sector)==TRUE
sum(grepl("*coal*",total$EI.Sector)==TRUE)
sum(grepl("*Coal*",total$EI.Sector)==TRUE)
grepl("*Coal*",total$EI.Sector)
coal<-total[grepl("*Coal*",total$EI.Sector),]
View(coal)
coal<-coal[coal$year>=1999 & coal$year<=2008,]
plotdata <- aggregate(coal$Emissions ~ coal$year, FUN=sum)
matrix <- as.matrix(plotdata)
barplot(t(matrix),names.arg=matrix[,1],
col="blue",
xlab="year",
ylab="Emissions",
main="Coal Emissions Accross the USA (is this a song?)")
source('E:/JH/Exploratory Data Analysis/Project2/plot4.R')
mode<-lm(Emissions~year,plotdata)
mode<-lm(emissions~year,plotdata)
View(plotdata)
mode<-lm(coal$emissions~coal$year,plotdata)
mode<-lm(coal$Emissions~coal$year,plotdata)
abline(mode,lwd=3)
source('E:/JH/Exploratory Data Analysis/Project2/plot4.R')
str(total)
total$SCC.Level.One
levels(total$SCC.Level.One)
levels(total$SCC.Level.Two)
levels(total$SCC.Level.Three)
levels(total$SCC.Level.One)
levels(total$SCC.Level.One)
coal<-total[total$SCC.Level.One=="Internal Combustion Engines",]
source('E:/JH/Exploratory Data Analysis/Project2/plot5.R')
source('E:/JH/Exploratory Data Analysis/Project2/plot5.R')
source('E:/JH/Exploratory Data Analysis/Project2/plot4.R')
View(motor)
?table
motor<-total[total$SCC.Level.One=="Internal Combustion Engines",]
motor<-motor[motor$year>=1999 & motor$year<=2008,]
motor<-total[total$SCC.Level.One=="Internal Combustion Engines",]
motor<-motor[motor$year>=1999 & motor$year<=2008,]
motor<-motor[motor$fips == "24510",]
levels(total$EI.Sector)
source('E:/JH/Exploratory Data Analysis/Project2/plot5.R')
View(motor)
motor<-total[grepl("*Vehicles*",total$EI.Sector),]
motor<-motor[(motor$fips == "24510" | motor$fips == "06037") & motor$year>=1999 & motor$year<=2008,]
zulu<-table(motor$year,motor$fips)
zulu
plotdata <- aggregate(motor$Emissions ~ motor$year+motor$fips, FUN=sum)
plotdata
p<-qplot(year,emissions,data=plotdata,facets=.~fips,geom="line")
print(p)
?melt
?table
plotdata
library(reshape)
install.packages("reshape")
library(reshape)
plotdata
?dcast
?melt
?cast
cast(plotdata,motor$year~variable,fun.aggregate=sum)
cast(plotdata,motor$year~variable,fun.aggregate=sum)
names(plotdata)
names(plotdata)<-c("year","fips","Emissions")
plotdata
mdata<-melt(plotdata)
mdata
mdata<-melt(plotdata,id=c("year"))
cast(mdata,year~variable,sum)
cast(mdata,year~variable)
plotdata
plotdata[plotdata$fips=="06037"]
plotdata[plotdata$fips=="06037",3]
dcast
install.package("reshape2")
install.packages("reshape2")
?reshape
?dcast
library(reshape2)
dcast
dcast(plotdata,year~fips,value.var="Emissions")
plotdata<-dcast(plotdata,year~fips,value.var="Emissions")
plotdata
barplot(plotdata,main="Lakers vs Celtics",xlab="foo",col=c("steelblue","magenta"),legend=rownames(plotdata),beside=TRUE)
m<-as.matrix(plotdata)
barplot(m,main="Lakers vs Celtics",xlab="foo",col=c("steelblue","magenta"),legend=rownames(plotdata),beside=TRUE)
plotdata<-dcast(plotdata,fips~year,value.var="Emissions")
plotdata<-dcast(plotdata,fips~year,value.var="emissions")
plotdata <- aggregate(motor$Emissions ~ motor$year+motor$fips, FUN=sum)
names(plotdata)<-c("year","fips","Emissions")
plotdata<-dcast(plotdata,fips~year,value.var="emissions")
plotdata<-dcast(plotdata,fips~year,value.var="Emissions")
plotdata
barplot(m,main="Lakers vs Celtics",xlab="foo",col=c("steelblue","magenta"),legend=rownames(plotdata),beside=TRUE)
m<-as.matrix(plotdata)
barplot(m,main="Lakers vs Celtics",xlab="foo",col=c("steelblue","magenta"),legend=rownames(plotdata),beside=TRUE)
barplot(m,main="Lakers vs Celtics",xlab="foo",col=c("steelblue","magenta"),legend=rownames(plotdata),beside=TRUE)
plotdata
data(mtcars)
mtcars
counts <- table(mtcars$vs, mtcars$gear)
counts
plotdata
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
str(counts)
counts <- table(mtcars$vs, mtcars$gear)
m
m[-1,]
m[,-1]
m2<-m[,-1]
barplot(m2,main="Lakers vs Celtics",xlab="foo",col=c("steelblue","magenta"),legend=rownames(plotdata),beside=TRUE)
m<-as.numeric(m)
m2<-as.numeric(m2)
m2
plotdata
str(plotdata)
plotdata<-dcast(plotdata,year~fips,value.var="Emissions")
plotdata <- aggregate(motor$Emissions ~ motor$year+motor$fips, FUN=sum)
plotdata<-dcast(plotdata,year~fips,value.var="Emissions")
plotdata<-dcast(plotdata,year~fips,value.var="Emissions")
names(plotdata)<-c("year","fips","Emissions")
plotdata<-dcast(plotdata,year~fips,value.var="Emissions")
plotdata
str(plotdata)
m<-as.matrix(plotdata)
m
str(m)
barplot(m,main="Lakers vs Celtics",xlab="foo",col=c("steelblue","magenta"),legend=rownames(plotdata),beside=TRUE)
plotdata <- aggregate(motor$Emissions ~ motor$year+motor$fips, FUN=sum)
names(plotdata)<-c("year","fips","Emissions")
plotdata<-dcast(plotdata,fips~year,value.var="Emissions")
plotdata
plotdata[,-1]
plotdata<-plotdata[,-1]
m<-as.matrix(plotdata)
m
barplot(m,main="Lakers vs Celtics",xlab="foo",col=c("steelblue","magenta"),legend=rownames(plotdata),beside=TRUE)
barplot(m,main="Emission from Motor Vehicles",xlab="foo",col=c("steelblue","magenta"),legend=c("Los Angeles","Baltimore"),beside=TRUE)
plotdata <- aggregate(motor$Emissions ~ motor$year+motor$fips, FUN=sum)
plotdata
source('E:/JH/Exploratory Data Analysis/Project2/plot6.R')
plotdata
plotdata <- aggregate(data1$Emissions ~ data1$year+data1$type, FUN=sum)
plotdata
plotdata <- aggregate(motor$Emissions ~ motor$year+motor$fips, FUN=sum)
plotdata
names(plotdata)<-c("year","fips","Emissions")
plotdata
str(plotdata)
plotdata$fips<-as.factor(plotdata$fips)
str(plotdata)
levels(plotdata$fips)
levels(plotdata$fips)<-c("Los Angeles","Baltimore")
str(plotdata)
p<-qplot(year,emissions,data=plotdata,facets=.~fips,geom="line")
library(ggplot2)
p<-qplot(year,emissions,data=plotdata,facets=.~fips,geom="line")
print(p)
plotdata
p<-qplot(year,Emissions,data=plotdata,facets=.~fips,geom="line")
print(p)
source('E:/JH/Exploratory Data Analysis/Project2/plot6.R')
p<-qplot(year,Emissions,data=plotdata,facets=.~fips,geom="line") + opts(title = "Motor Vehicle Emissions")
p<-qplot(year,emissions,data=plotdata,facets=.~type,geom="line") + labs(title = "Motor Vehicle Emissions")
print(p)
source('E:/JH/Exploratory Data Analysis/Project2/plot3.R')
plotdata
source('E:/JH/Exploratory Data Analysis/Project2/plot6.R')
source("plot1.R");source("plot2.R");source("plot3.R");source("plot4.R");source("plot5.R");source("plot6.R")
?ggsave
source('E:/JH/Exploratory Data Analysis/Project2/plot3.R')
p<-qplot(year,emissions,data=plotdata,facets=.~type,geom="line") + labs(title = "Emissions by Type for Baltimore City")
ggsave("plot3.png",p,width=6,height=3)
ggsave("plot3.png",p,width=4,height=2)
ggsave("plot3.png",p)
View(total)
setwd("E:/JH/Reproducible Research/RepData_PeerAssessment1")
?read.csv
activity<-read.csv("activity.csv",header=TRUE,row.names=FALSE)
activity<-read.csv("activity.csv",header=TRUE)
View(activity)
install.packages(knitr)
install.packages("knitr")
?histogram
?hist
hist(activity$steps)
hist(activity$date)
?hist
aggregate(steps~date)
aggregate(steps~date,data=activity)
aggregate(steps~date,data=activity,FUN=sum)
steps<-aggregate(steps~date,data=activity,FUN=sum)
hist(steps$steps)
?hist
hist(steps$steps,main="Number of steps taken",xlab="steps",col="blue")
abline(mean(steps$steps))
?abline
abline(h=mean(steps$steps))
abline(v=mean(steps$steps))
abline(v=mean(steps$steps),lwd=3,col="red")
abline(v=med(steps$steps),lwd=3,col="red")
abline(v=median(steps$steps),lwd=3,col="green")
View(steps)
hist(steps$steps,main="Number of steps taken",xlab="steps",col="blue",breaks=20)
interval<-aggregate(steps~interval,data=activity,FUN=mean)
View(interval)
library(ggplot2)
library(ggplot2)
g<-ggplot2(interval,aes(interval,steps))
g<-ggplot(interval,aes(interval,steps))
p<-g+geom_line()
print(p)
max(interval$steps)
interval[interval$steps==max(interval$steps),]
interval[interval$steps==max(interval$steps),1]
interval[interval$steps==max(interval$steps),1]
is.na(activity$steps)
sum(is.na(activity$steps))
?mean
abline(v=interval[interval$steps==max(interval$steps),1])
abline(v=interval[interval$steps==max(interval$steps),1],lwd=3)
mint<-interval[interval$steps==max(interval$steps),1]
mint
abline(v=835,1],lwd=3)
abline(v=835,1,lwd=3)
abline(v=835,lwd=3)
abline(h=835,lwd=3)
p<-g+geom_line()+geom_vline(835)
p<-g+geom_line()+geom_vline(xintercept=mint)
print(p)
p<-g+geom_line()+geom_vline(xintercept=mint,colour="green")
print(p)
p<-g+geom_line()+geom_vline(xintercept=mint,colour="green",linetype="longdash")
print(p)
p<-g+geom_line()+geom_vline(xintercept=mint,colour="green",linetype="longdash",size=2)
print(p)
p<-g+geom_line()+geom_vline(xintercept=mint,colour="green",linetype="longdash",size=1.2)
print(p)
colors()
activity[is.na(activity$steps)]
activity[is.na(activity$steps),]
activity$steps[is.na(activity$steps)]
activity$steps[is.na(activity$steps)]<-interval$steps[interval$interval==activity$interval]
View(activity)
activity<-read.csv("activity.csv",header=TRUE)
activity$steps[is.na(activity$steps)]<-interval$steps[interval$interval==activity$interval]
activity$steps
activity<-read.csv("activity.csv",header=TRUE)
?sapply
?apply
?lapply
pepe <-lapply(activity, function(x) {if is.na(x$steps) x$steps=12})
pepe <-lapply(activity, function(x) {if (is.na(x$steps)) x$steps=12})
pepe <-lapply(activity, function(x) {if (is.na(x$steps)) x$steps=12})
pepe<-merge(activity,interval,by=c("interval","interval"))
View(pepe)
pepe$steps.x[is.na(pepe$steps.x),]
pepe$steps.x
is.na(pepe$steps.x)
pepe[is.na(pepe$steps.x),]
pepe[is.na(pepe$steps.x),2]
pepe[is.na(pepe$steps.x),2]<-pepe$steps.y
activity<-read.csv("activity.csv",header=TRUE)
View(activity)
foo<-activity
foo[is.na(foo$steps),1]
foo[is.na(foo$steps),1]<-interval[interval$interval==foo$interval,2]
jelly<-melt(activity)
jelly
View(jelly)
source('E:/JH/Reproducible Research/RepData_PeerAssessment1/repl.R')
source('E:/JH/Reproducible Research/RepData_PeerAssessment1/repl.R')
source('E:/JH/Reproducible Research/RepData_PeerAssessment1/repl.R')
View(activity)
activity$steps
is.na(activity$steps)
sum(is.na(activity$steps))
str(activity)
activity$date<-as.Date(activity$date)
str(activity)
weekdays("2012-02-01")
weekdays(as.Date("2012-02-01"))
weekdays(as.Date("2012-02-04"))
weekdays(as.Date("2012-02-05"))
weekdays(activity$date)=="Saturday"
weekdays(activity$date)=="Saturday" | weekdays(activity$date=="Sunday")
weekdays(activity$date)=="Saturday" | weekdays(activity$date)=="Sunday"
activity$daytype<-"weekday"
weekdays(activity$date)=="Saturday" | weekdays(activity$date)=="Sunday"
activity$daytype[weekdays(activity$date)=="Saturday" | weekdays(activity$date)=="Sunday"]
activity$daytype[weekdays(activity$date)=="Saturday" | weekdays(activity$date)=="Sunday"]<-"weekend"
activity$daytype<-as.factor(activity$daytype)
str(activity)
summary(activity)
aggregate(steps~interval,data=activity,FUN=mean)
aggregate(steps~interval+daytype,data=activity,FUN=mean)
interval<-aggregate(steps~interval+daytype,data=activity,FUN=mean)
library(ggplot2)
g<-ggplot(interval,aes(interval,steps)) + facet_wrap(~daytype)
p<-g+geom_line()+geom_vline(xintercept=interval[interval$steps==max(interval$steps),1],colour="red",linetype="longdash")
print(p)
interval<-aggregate(steps~interval+daytype,data=activity,FUN=mean)
library(ggplot2)
g<-ggplot(interval,aes(interval,steps)) + facet_grid(~daytype)
p<-g+geom_line()
print(p)
interval<-aggregate(steps~interval+daytype,data=activity,FUN=mean)
library(ggplot2)
g<-ggplot(interval,aes(interval,steps)) + facet_grid(daytype)
p<-g+geom_line()
print(p)
interval<-aggregate(steps~interval+daytype,data=activity,FUN=mean)
View(interval)
library(ggplot2)
g<-ggplot(interval,aes(interval,steps)) + facet_grid(daytype)
p<-g+geom_line()
print(p)
interval<-aggregate(steps~interval+daytype,data=activity,FUN=mean)
library(ggplot2)
g<-ggplot(interval,aes(interval,steps)) + facet_grid(~daytype)
p<-g+geom_line()
print(p)
interval<-aggregate(steps~interval+daytype,data=activity,FUN=mean)
library(ggplot2)
g<-ggplot(interval,aes(interval,steps)) + facet_grid(daytype~.)
p<-g+geom_line()
print(p)
setwd("E:/JH/Reproducible Research/project2")
storm<-read.csv("repdata-data-StormData.csv")
View(storm)
storm$EVTYPE
levels(storm$EVTYPE)
data<-read.csv("repdata-data-StormData.csv")
View(storm)
levels(data$EVTYPE)
source('E:/JH/Reproducible Research/project2/doit.R')
keep <- c("EVTYPE","FATALITIES", "INJURIES",
"PROPDMG", "PROPDMGEXP",
"CROPDMG", "CROPDMGEXP")
data <- data[,keep]
str(data)
data$total.property.damage<-data$PROPDMG * as.numeric(data$PROPDMGEXP)
View(data)
levels(data$PROPDMGEXP)
levels(data$PROPDMGEXP) <- c(
"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1",
"1000000000", "1", "1", "1000", "1000000", "1000000")
levels(data$CROPDMGEXP) <- c(
"1", "1", "1", "1", "1000000000", "1000",
"1000", "1000000", "1000000")
data$total.property.damage<-data$PROPDMG * as.numeric(data$PROPDMGEXP)
View(data)
data$total.property.damage<-data$PROPDMG * as.numeric(as.character(data$PROPDMGEXP))
View(data)
data$total.crop.damage<-data$CROPDMG * as.numeric(as.character(data$CROPDMGEXP))
data$total.damage<-data$total.property.damage + data$total.crop.damage
View(data)
aggregate(data$FATALITIES~data$EVTYPE)
aggregate(data$FATALITIES~data$EVTYPE,FUN=sum)
fatalities<-aggregate(data$FATALITIES~data$EVTYPE,FUN=sum)
fatalities<-fatalities[order(FATALITIES),]
View(fatalities)
fatalities<-fatalities[order(data$FATALITIES),]
View(fatalities)
names(fatalities)<-c("EVENT","FATALITIES")
View(fatalities)
fatalities<-fatalities[order(-FATALITIES),]
fatalities<-fatalities[order(-FATALITIES),]
str(fatalities)
fatalities<-fatalities[order(FATALITIES),]
fatalities<-fatalities[order(fatalities$FATALITIES),]
fatalities<-fatalities[order(-fatalities$FATALITIES),]
View(fatalities)
foo<-fatalities[1:20,]
View(foo)
injuries<-aggregate(data$INJURIES~data$EVTYPE,FUN=sum)
names(injuriess)<-c("EVENT","INJURIES")
injuries<-injuries[order(-injuries$injuries),]
names(injuries)<-c("EVENT","INJURIES")
injuries<-injuries[order(-injuries$injuries),]
View(injuries)
injuries<-injuries[order(-injuries$injuries),]
fatalities<-aggregate(data$FATALITIES~data$EVTYPE,FUN=sum)
names(fatalities)<-c("EVENT","FATALITIES")
fatalities<-fatalities[order(-fatalities$FATALITIES),]
data$total.victims<-data$FATALITIES+data$INJURIES
victims<-aggregate(data$total.victims~data$EVTYPE,FUN=sum)
View(victims)
names(victims)<-c("event","victims")
victims<-victims[order(-victims$victims),]
View(victims)
victims<-victims[1:20,]
View(victims)
g<-ggplot(victims,aes(event,victims))
p<-g+geom_line()
print(p)
p<-g+geom_bar()
print(p)
plot1 <- qplot(event, data = victims, geom = "bar", weight = VALUE, fill = event) +
xlab("Event Category") + ylab("Health Incidents") + ggtitle("Total Health Incidents by Weather Event Category") +
theme(axis.text.x = element_text(angle = 90)) + theme(legend.key.size = unit(0.5,
"cm"))
plot1 <- qplot(event, data = victims, geom = "bar", weight = VALUE, fill = event) +
xlab("Event Category") + ylab("Health Incidents") + ggtitle("Total Health Incidents by Weather Event Category")
print(plot1)
plot1 <- qplot(event, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Category") + ylab("Health Incidents") + ggtitle("Total Health Incidents by Weather Event Category")
print(plot1)
g<-ggplot(event,aes(event,victims))
g<-ggplot(victims,aes(event,victims))
p<-g+geom_line()
print(p)
vplot <- qplot(event, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type")
print(vplot)
vplot <- qplot(event, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type") +theme(axis.text.x = element_text(angle = 90))
print(vplot)
View(victims)
vplot <- qplot(event, data = victims, geom = "bar", weight = victims) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type") +theme(axis.text.x = element_text(angle = 90))
print(vplot)
vplot <- qplot(event, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type") +theme(axis.text.x = element_text(angle = 90))
print(vplot)
vplot <- qplot(event, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type") +theme(axis.text.x = element_text(angle = 90)) + theme(legend.key.size = 0.5)                                                                                                                      "cm"))
vplot <- qplot(event, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type") +theme(axis.text.x = element_text(angle = 90)) + theme(legend.key.size = 0.5)
vplot <- qplot(event, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type") +theme(axis.text.x = element_text(angle = 90)) + theme(legend.key.size = unit(0.5,"in")
)
?unit
??unit
str(victims)
victims
vplot <- qplot(victims, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type") +theme(axis.text.x = element_text(angle = 90))
print(vplot)
victims2 <- factor(victims, as.character(victims))
victims$event <- factor(victims$event, as.character(victims$event))
View(victims)
vplot <- qplot(victims, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type") +theme(axis.text.x = element_text(angle = 90))
print(vplot)
vplot <- qplot(event, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type") +theme(axis.text.x = element_text(angle = 90))
print(vplot)
victims<-victims[1:10,]
vplot <- qplot(event, data = victims, geom = "bar", weight = victims, fill = event) +
xlab("Event Type") + ylab("Victims") + ggtitle("Total Victims per Event Type") +theme(axis.text.x = element_text(angle = 90))
print(vplot)
damage<-aggregate(data$total.damage~data$EVTYPE,FUN=sum)
View(damage)
names(damage)<-c("event","cost")
damage<-damage[order(-damage$cost),]
View(damage)
damage<-damage[1:10,]
damage$event <- factor(damage$event, as.character(damage$event))
View(damage)
vplot <- qplot(event, data = damage, geom = "bar", weight = cost, fill = event) +
xlab("Event Type") + ylab("Cost") + ggtitle("Total Cost per Event Type") +theme(axis.text.x = element_text(angle = 90))
print(vplot)
options(rpubs.upload.method = "internal")
setwd("E:/JH/Developing Data Products")
